{"version":3,"sources":["shared/Utils.js","Table.js","App.js","reportWebVitals.js","index.js"],"names":["classNames","classes","filter","Boolean","join","InjuryPill","value","injury","toLowerCase","className","AvatarCell","column","row","src","original","imgAccessor","alt","phone","Table","columns","data","useTable","getTableProps","getTableBodyProps","headerGroups","prepareRow","rows","map","headerGroup","getHeaderGroupProps","headers","scope","getHeaderProps","render","i","getRowProps","cells","cell","getCellProps","role","Cell","name","App","React","useMemo","Header","accessor","formattedDate","Date","toLocaleDateString","day","month","year","replace","doctor","patient_name","mobile_number","appointment_date","appointment_time","imgUrl","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8cae297b.chunk.js","sourcesContent":["export function classNames(...classes) {\n  return classes.filter(Boolean).join(\" \");\n}","import React from \"react\"\nimport { useTable } from \"react-table\"\n\nimport { classNames } from \"./shared/Utils\"\n\nexport function InjuryPill({ value }) {\n  const injury = value ? value.toLowerCase() : \"unknown\"\n\n  return <span className={classNames(\"px-3 py-1 uppercase leading-wide font-bold text-xs rounded-full shadow-sm bg-blue-100 text-gray-500\")}>{injury}</span>\n}\n\nexport function AvatarCell({ value, column, row }) {\n  return (\n    <div className=\"flex items-center\">\n      <div className=\"flex-shrink-0 h-10 w-10\">\n        <img className=\"h-10 w-10 rounded-full\" src={row.original[column.imgAccessor]} alt=\"\" />\n      </div>\n      <div className=\"ml-4\">\n        <div className=\"text-sm font-medium text-gray-900\">{value}</div>\n        <div className=\"text-sm text-gray-500\">{row.original[column.phone]}</div>\n      </div>\n    </div>\n  )\n}\n\nfunction Table({ columns, data }) {\n  const { getTableProps, getTableBodyProps, headerGroups, prepareRow, rows } = useTable({\n    columns,\n    data,\n  })\n\n  return (\n    <div className=\"mt-4 flex flex-col\">\n      <div className=\"-my-2 overflow-x-auto -mx-4 sm:-mx-6 lg:-mx-8\">\n        <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n          <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n            <table {...getTableProps()} className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                {headerGroups.map((headerGroup) => (\n                  <tr {...headerGroup.getHeaderGroupProps()}>\n                    {headerGroup.headers.map((column) => (\n                      <th scope=\"col\" className=\"group px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\" {...column.getHeaderProps(column)}>\n                        <div className=\"flex items-center justify-between\">{column.render(\"Header\")}</div>\n                      </th>\n                    ))}\n                  </tr>\n                ))}\n              </thead>\n              <tbody {...getTableBodyProps()} className=\"bg-white divide-y divide-gray-200\">\n                {rows.map((row, i) => {\n                  \n                  prepareRow(row)\n                  return (\n                    <tr {...row.getRowProps()}>\n                      {row.cells.map((cell) => (\n                        <td {...cell.getCellProps()} className=\"px-6 py-4 whitespace-nowrap\" role=\"cell\">\n                          {cell.column.Cell.name === \"defaultRenderer\" ? <div className=\"text-sm text-gray-500\">{cell.render(\"Cell\")}</div> : cell.render(\"Cell\")}\n                        </td>\n                      ))}\n                    </tr>\n                  )\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Table\n","import React from \"react\"\nimport Table, { AvatarCell, InjuryPill } from \"./Table\" \nimport { DotsVerticalIcon } from \"@heroicons/react/solid\"\nimport { StarIcon } from \"@heroicons/react/solid\"\nimport { ClockIcon } from \"@heroicons/react/solid\"\nimport { CalendarIcon } from \"@heroicons/react/solid\"\n\nconst getData = () => {\n  const data = [\n    {\n      patient_name: \"John Doe\",\n      mobile_number: \"+123-456-7890\",\n      appointment_date: \"2024-02-26\",\n      appointment_time: \"10:00 AM\",\n      doctor: \"Dr. Smith\",\n      injury: \"Sprained ankle\",\n      imgUrl: \"https://images.unsplash.com/photo-1570295999919-56ceb5ecca61?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=4&w=256&h=256&q=60\",\n    },\n    {\n      patient_name: \"Jane Smith\",\n      mobile_number: \"+987-654-3210\",\n      appointment_date: \"2024-02-26\",\n      appointment_time: \"11:30 AM\",\n      doctor: \"Dr. Johnson\",\n      injury: \"Back pain\",\n      imgUrl: \"https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=4&w=256&h=256&q=60\",\n    },\n    {\n      patient_name: \"Michael Johnson\",\n      mobile_number: \"+456-789-0123\",\n      appointment_date: \"2024-02-26\",\n      appointment_time: \"1:00 PM\",\n      doctor: \"Dr. Lee\",\n      injury: \"Headache\",\n      imgUrl: \"https://images.unsplash.com/photo-1520813792240-56fc4a3765a7?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=4&w=256&h=256&q=60\",\n    },\n    {\n      patient_name: \"Emily Davis\",\n      mobile_number: \"+789-012-3456\",\n      appointment_date: \"2024-02-26\",\n      appointment_time: \"2:30 PM\",\n      doctor: \"Dr. Patel\",\n      injury: \"Sore throat\",\n      imgUrl: \"https://images.unsplash.com/photo-1498551172505-8ee7ad69f235?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=4&w=256&h=256&q=60\",\n    },\n    {\n      patient_name: \"David Wilson\",\n      mobile_number: \"+321-654-9870\",\n      appointment_date: \"2024-02-26\",\n      appointment_time: \"4:00 PM\",\n      doctor: \"Dr. Garcia\",\n      injury: \"Fever\",\n      imgUrl: \"https://images.unsplash.com/photo-1532417344469-368f9ae6d187?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=4&w=256&h=256&q=60\",\n    },\n    {\n      patient_name: \"Sarah Brown\",\n      mobile_number: \"+654-321-0987\",\n      appointment_date: \"2024-02-26\",\n      appointment_time: \"5:30 PM\",\n      doctor: \"Dr. Kim\",\n      injury: \"Cough\",\n      imgUrl: \"https://images.unsplash.com/photo-1566492031773-4f4e44671857?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=4&w=256&h=256&q=60\",\n    },\n  ]\n  return [...data]\n}\n\nfunction App() {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"PATIENTS\",\n        accessor: \"patient_name\",\n        Cell: AvatarCell,\n        imgAccessor: \"imgUrl\",\n        phone: \"mobile_number\",\n      },\n      {\n        Header: \"DATE\",\n        accessor: \"appointment_date\",\n        Cell: ({ value }) => {\n          const date = new Date(value)\n\n          const formattedDate = date.toLocaleDateString(\"en-GB\", {\n            day: \"numeric\",\n            month: \"short\",\n            year: \"numeric\",\n          })\n          return (\n            <div className=\"flex items-center\">\n              <CalendarIcon className=\"h-5 w-5 text-gray-400 mr-1\" />\n              {formattedDate}\n            </div>\n          )\n        },\n      },\n      {\n        Header: \"TIME\",\n        accessor: \"appointment_time\",\n        Cell: ({ value }) => (\n          <div className=\"flex items-center\">\n            <ClockIcon className=\"h-5 w-5 text-gray-400 mr-1\" />\n            {value.replace(/(AM|PM)/gi, \"\")}\n          </div>\n        ),\n      },\n      {\n        Header: \"DOCTOR\",\n        accessor: \"doctor\",\n        Cell: ({ row }) => (\n          <div className=\"flex items-center\">\n            <StarIcon className=\"h-5 w-5 text-yellow-500 mr-1\" />\n            {row.original.doctor} {/* Accessing the original doctor's name */}\n          </div>\n        ),\n      },\n      {\n        Header: \"INJURY\",\n        accessor: \"injury\",\n        Cell: InjuryPill,\n      },\n      {\n        Header: \"ACTION\",\n        accessor: \"ACTION\",\n        Cell: () => (\n          <div className=\"flex items-center\">\n            <DotsVerticalIcon className=\"h-5 w-5 text-gray-500 cursor-pointer\" />\n          </div>\n        ),\n      },\n    ],\n    []\n  )\n\n  const data = React.useMemo(() => getData(), [])\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 text-gray-900\">\n      <main className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\">\n        <div className=\"\">\n          <h4 className=\"text-xl font-semibold\">Today's Appointment List</h4>\n        </div>\n        <div className=\"mt-6\">\n          <Table columns={columns} data={data} />\n        </div>\n      </main>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}